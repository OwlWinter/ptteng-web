package cn.mogeek.rmi.ptteng.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DirectionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public DirectionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionIsNull() {
            addCriterion("career_direction is null");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionIsNotNull() {
            addCriterion("career_direction is not null");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionEqualTo(String value) {
            addCriterion("career_direction =", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotEqualTo(String value) {
            addCriterion("career_direction <>", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionGreaterThan(String value) {
            addCriterion("career_direction >", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionGreaterThanOrEqualTo(String value) {
            addCriterion("career_direction >=", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionLessThan(String value) {
            addCriterion("career_direction <", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionLessThanOrEqualTo(String value) {
            addCriterion("career_direction <=", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionLike(String value) {
            addCriterion("career_direction like", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotLike(String value) {
            addCriterion("career_direction not like", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionIn(List<String> values) {
            addCriterion("career_direction in", values, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotIn(List<String> values) {
            addCriterion("career_direction not in", values, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionBetween(String value1, String value2) {
            addCriterion("career_direction between", value1, value2, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotBetween(String value1, String value2) {
            addCriterion("career_direction not between", value1, value2, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentIsNull() {
            addCriterion("number_of_student is null");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentIsNotNull() {
            addCriterion("number_of_student is not null");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentEqualTo(Integer value) {
            addCriterion("number_of_student =", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentNotEqualTo(Integer value) {
            addCriterion("number_of_student <>", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentGreaterThan(Integer value) {
            addCriterion("number_of_student >", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentGreaterThanOrEqualTo(Integer value) {
            addCriterion("number_of_student >=", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentLessThan(Integer value) {
            addCriterion("number_of_student <", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentLessThanOrEqualTo(Integer value) {
            addCriterion("number_of_student <=", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentIn(List<Integer> values) {
            addCriterion("number_of_student in", values, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentNotIn(List<Integer> values) {
            addCriterion("number_of_student not in", values, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentBetween(Integer value1, Integer value2) {
            addCriterion("number_of_student between", value1, value2, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentNotBetween(Integer value1, Integer value2) {
            addCriterion("number_of_student not between", value1, value2, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationIsNull() {
            addCriterion("employed_population is null");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationIsNotNull() {
            addCriterion("employed_population is not null");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationEqualTo(Integer value) {
            addCriterion("employed_population =", value, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationNotEqualTo(Integer value) {
            addCriterion("employed_population <>", value, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationGreaterThan(Integer value) {
            addCriterion("employed_population >", value, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationGreaterThanOrEqualTo(Integer value) {
            addCriterion("employed_population >=", value, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationLessThan(Integer value) {
            addCriterion("employed_population <", value, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationLessThanOrEqualTo(Integer value) {
            addCriterion("employed_population <=", value, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationIn(List<Integer> values) {
            addCriterion("employed_population in", values, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationNotIn(List<Integer> values) {
            addCriterion("employed_population not in", values, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationBetween(Integer value1, Integer value2) {
            addCriterion("employed_population between", value1, value2, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andEmployedPopulationNotBetween(Integer value1, Integer value2) {
            addCriterion("employed_population not between", value1, value2, "employedPopulation");
            return (Criteria) this;
        }

        public Criteria andUpdateatIsNull() {
            addCriterion("updateat is null");
            return (Criteria) this;
        }

        public Criteria andUpdateatIsNotNull() {
            addCriterion("updateat is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateatEqualTo(Date value) {
            addCriterion("updateat =", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatNotEqualTo(Date value) {
            addCriterion("updateat <>", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatGreaterThan(Date value) {
            addCriterion("updateat >", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatGreaterThanOrEqualTo(Date value) {
            addCriterion("updateat >=", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatLessThan(Date value) {
            addCriterion("updateat <", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatLessThanOrEqualTo(Date value) {
            addCriterion("updateat <=", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatIn(List<Date> values) {
            addCriterion("updateat in", values, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatNotIn(List<Date> values) {
            addCriterion("updateat not in", values, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatBetween(Date value1, Date value2) {
            addCriterion("updateat between", value1, value2, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatNotBetween(Date value1, Date value2) {
            addCriterion("updateat not between", value1, value2, "updateat");
            return (Criteria) this;
        }

        public Criteria andCreateatIsNull() {
            addCriterion("createat is null");
            return (Criteria) this;
        }

        public Criteria andCreateatIsNotNull() {
            addCriterion("createat is not null");
            return (Criteria) this;
        }

        public Criteria andCreateatEqualTo(Date value) {
            addCriterion("createat =", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatNotEqualTo(Date value) {
            addCriterion("createat <>", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatGreaterThan(Date value) {
            addCriterion("createat >", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatGreaterThanOrEqualTo(Date value) {
            addCriterion("createat >=", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatLessThan(Date value) {
            addCriterion("createat <", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatLessThanOrEqualTo(Date value) {
            addCriterion("createat <=", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatIn(List<Date> values) {
            addCriterion("createat in", values, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatNotIn(List<Date> values) {
            addCriterion("createat not in", values, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatBetween(Date value1, Date value2) {
            addCriterion("createat between", value1, value2, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatNotBetween(Date value1, Date value2) {
            addCriterion("createat not between", value1, value2, "createat");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table direction
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 20 02:59:46 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table direction
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}