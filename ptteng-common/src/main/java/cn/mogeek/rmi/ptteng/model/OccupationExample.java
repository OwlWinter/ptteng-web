package cn.mogeek.rmi.ptteng.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OccupationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public OccupationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionIsNull() {
            addCriterion("career_direction is null");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionIsNotNull() {
            addCriterion("career_direction is not null");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionEqualTo(Integer value) {
            addCriterion("career_direction =", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotEqualTo(Integer value) {
            addCriterion("career_direction <>", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionGreaterThan(Integer value) {
            addCriterion("career_direction >", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionGreaterThanOrEqualTo(Integer value) {
            addCriterion("career_direction >=", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionLessThan(Integer value) {
            addCriterion("career_direction <", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionLessThanOrEqualTo(Integer value) {
            addCriterion("career_direction <=", value, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionIn(List<Integer> values) {
            addCriterion("career_direction in", values, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotIn(List<Integer> values) {
            addCriterion("career_direction not in", values, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionBetween(Integer value1, Integer value2) {
            addCriterion("career_direction between", value1, value2, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andCareerDirectionNotBetween(Integer value1, Integer value2) {
            addCriterion("career_direction not between", value1, value2, "careerDirection");
            return (Criteria) this;
        }

        public Criteria andMajorIsNull() {
            addCriterion("major is null");
            return (Criteria) this;
        }

        public Criteria andMajorIsNotNull() {
            addCriterion("major is not null");
            return (Criteria) this;
        }

        public Criteria andMajorEqualTo(String value) {
            addCriterion("major =", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotEqualTo(String value) {
            addCriterion("major <>", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorGreaterThan(String value) {
            addCriterion("major >", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorGreaterThanOrEqualTo(String value) {
            addCriterion("major >=", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorLessThan(String value) {
            addCriterion("major <", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorLessThanOrEqualTo(String value) {
            addCriterion("major <=", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorLike(String value) {
            addCriterion("major like", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotLike(String value) {
            addCriterion("major not like", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorIn(List<String> values) {
            addCriterion("major in", values, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotIn(List<String> values) {
            addCriterion("major not in", values, "major");
            return (Criteria) this;
        }

        public Criteria andMajorBetween(String value1, String value2) {
            addCriterion("major between", value1, value2, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotBetween(String value1, String value2) {
            addCriterion("major not between", value1, value2, "major");
            return (Criteria) this;
        }

        public Criteria andImgesIsNull() {
            addCriterion("imges is null");
            return (Criteria) this;
        }

        public Criteria andImgesIsNotNull() {
            addCriterion("imges is not null");
            return (Criteria) this;
        }

        public Criteria andImgesEqualTo(String value) {
            addCriterion("imges =", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesNotEqualTo(String value) {
            addCriterion("imges <>", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesGreaterThan(String value) {
            addCriterion("imges >", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesGreaterThanOrEqualTo(String value) {
            addCriterion("imges >=", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesLessThan(String value) {
            addCriterion("imges <", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesLessThanOrEqualTo(String value) {
            addCriterion("imges <=", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesLike(String value) {
            addCriterion("imges like", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesNotLike(String value) {
            addCriterion("imges not like", value, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesIn(List<String> values) {
            addCriterion("imges in", values, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesNotIn(List<String> values) {
            addCriterion("imges not in", values, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesBetween(String value1, String value2) {
            addCriterion("imges between", value1, value2, "imges");
            return (Criteria) this;
        }

        public Criteria andImgesNotBetween(String value1, String value2) {
            addCriterion("imges not between", value1, value2, "imges");
            return (Criteria) this;
        }

        public Criteria andIntroduceIsNull() {
            addCriterion("introduce is null");
            return (Criteria) this;
        }

        public Criteria andIntroduceIsNotNull() {
            addCriterion("introduce is not null");
            return (Criteria) this;
        }

        public Criteria andIntroduceEqualTo(String value) {
            addCriterion("introduce =", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceNotEqualTo(String value) {
            addCriterion("introduce <>", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceGreaterThan(String value) {
            addCriterion("introduce >", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceGreaterThanOrEqualTo(String value) {
            addCriterion("introduce >=", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceLessThan(String value) {
            addCriterion("introduce <", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceLessThanOrEqualTo(String value) {
            addCriterion("introduce <=", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceLike(String value) {
            addCriterion("introduce like", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceNotLike(String value) {
            addCriterion("introduce not like", value, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceIn(List<String> values) {
            addCriterion("introduce in", values, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceNotIn(List<String> values) {
            addCriterion("introduce not in", values, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceBetween(String value1, String value2) {
            addCriterion("introduce between", value1, value2, "introduce");
            return (Criteria) this;
        }

        public Criteria andIntroduceNotBetween(String value1, String value2) {
            addCriterion("introduce not between", value1, value2, "introduce");
            return (Criteria) this;
        }

        public Criteria andThresholdIsNull() {
            addCriterion("threshold is null");
            return (Criteria) this;
        }

        public Criteria andThresholdIsNotNull() {
            addCriterion("threshold is not null");
            return (Criteria) this;
        }

        public Criteria andThresholdEqualTo(Integer value) {
            addCriterion("threshold =", value, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdNotEqualTo(Integer value) {
            addCriterion("threshold <>", value, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdGreaterThan(Integer value) {
            addCriterion("threshold >", value, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdGreaterThanOrEqualTo(Integer value) {
            addCriterion("threshold >=", value, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdLessThan(Integer value) {
            addCriterion("threshold <", value, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdLessThanOrEqualTo(Integer value) {
            addCriterion("threshold <=", value, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdIn(List<Integer> values) {
            addCriterion("threshold in", values, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdNotIn(List<Integer> values) {
            addCriterion("threshold not in", values, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdBetween(Integer value1, Integer value2) {
            addCriterion("threshold between", value1, value2, "threshold");
            return (Criteria) this;
        }

        public Criteria andThresholdNotBetween(Integer value1, Integer value2) {
            addCriterion("threshold not between", value1, value2, "threshold");
            return (Criteria) this;
        }

        public Criteria andDifficultyIsNull() {
            addCriterion("difficulty is null");
            return (Criteria) this;
        }

        public Criteria andDifficultyIsNotNull() {
            addCriterion("difficulty is not null");
            return (Criteria) this;
        }

        public Criteria andDifficultyEqualTo(Integer value) {
            addCriterion("difficulty =", value, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyNotEqualTo(Integer value) {
            addCriterion("difficulty <>", value, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyGreaterThan(Integer value) {
            addCriterion("difficulty >", value, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyGreaterThanOrEqualTo(Integer value) {
            addCriterion("difficulty >=", value, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyLessThan(Integer value) {
            addCriterion("difficulty <", value, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyLessThanOrEqualTo(Integer value) {
            addCriterion("difficulty <=", value, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyIn(List<Integer> values) {
            addCriterion("difficulty in", values, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyNotIn(List<Integer> values) {
            addCriterion("difficulty not in", values, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyBetween(Integer value1, Integer value2) {
            addCriterion("difficulty between", value1, value2, "difficulty");
            return (Criteria) this;
        }

        public Criteria andDifficultyNotBetween(Integer value1, Integer value2) {
            addCriterion("difficulty not between", value1, value2, "difficulty");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleIsNull() {
            addCriterion("growth_cycle is null");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleIsNotNull() {
            addCriterion("growth_cycle is not null");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleEqualTo(String value) {
            addCriterion("growth_cycle =", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleNotEqualTo(String value) {
            addCriterion("growth_cycle <>", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleGreaterThan(String value) {
            addCriterion("growth_cycle >", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleGreaterThanOrEqualTo(String value) {
            addCriterion("growth_cycle >=", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleLessThan(String value) {
            addCriterion("growth_cycle <", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleLessThanOrEqualTo(String value) {
            addCriterion("growth_cycle <=", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleLike(String value) {
            addCriterion("growth_cycle like", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleNotLike(String value) {
            addCriterion("growth_cycle not like", value, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleIn(List<String> values) {
            addCriterion("growth_cycle in", values, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleNotIn(List<String> values) {
            addCriterion("growth_cycle not in", values, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleBetween(String value1, String value2) {
            addCriterion("growth_cycle between", value1, value2, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andGrowthCycleNotBetween(String value1, String value2) {
            addCriterion("growth_cycle not between", value1, value2, "growthCycle");
            return (Criteria) this;
        }

        public Criteria andScarcityIsNull() {
            addCriterion("scarcity is null");
            return (Criteria) this;
        }

        public Criteria andScarcityIsNotNull() {
            addCriterion("scarcity is not null");
            return (Criteria) this;
        }

        public Criteria andScarcityEqualTo(Integer value) {
            addCriterion("scarcity =", value, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityNotEqualTo(Integer value) {
            addCriterion("scarcity <>", value, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityGreaterThan(Integer value) {
            addCriterion("scarcity >", value, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityGreaterThanOrEqualTo(Integer value) {
            addCriterion("scarcity >=", value, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityLessThan(Integer value) {
            addCriterion("scarcity <", value, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityLessThanOrEqualTo(Integer value) {
            addCriterion("scarcity <=", value, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityIn(List<Integer> values) {
            addCriterion("scarcity in", values, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityNotIn(List<Integer> values) {
            addCriterion("scarcity not in", values, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityBetween(Integer value1, Integer value2) {
            addCriterion("scarcity between", value1, value2, "scarcity");
            return (Criteria) this;
        }

        public Criteria andScarcityNotBetween(Integer value1, Integer value2) {
            addCriterion("scarcity not between", value1, value2, "scarcity");
            return (Criteria) this;
        }

        public Criteria andSalaryIsNull() {
            addCriterion("salary is null");
            return (Criteria) this;
        }

        public Criteria andSalaryIsNotNull() {
            addCriterion("salary is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryEqualTo(Integer value) {
            addCriterion("salary =", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotEqualTo(Integer value) {
            addCriterion("salary <>", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryGreaterThan(Integer value) {
            addCriterion("salary >", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("salary >=", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryLessThan(Integer value) {
            addCriterion("salary <", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryLessThanOrEqualTo(Integer value) {
            addCriterion("salary <=", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryIn(List<Integer> values) {
            addCriterion("salary in", values, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotIn(List<Integer> values) {
            addCriterion("salary not in", values, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryBetween(Integer value1, Integer value2) {
            addCriterion("salary between", value1, value2, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("salary not between", value1, value2, "salary");
            return (Criteria) this;
        }

        public Criteria andCoefficientIsNull() {
            addCriterion("coefficient is null");
            return (Criteria) this;
        }

        public Criteria andCoefficientIsNotNull() {
            addCriterion("coefficient is not null");
            return (Criteria) this;
        }

        public Criteria andCoefficientEqualTo(Float value) {
            addCriterion("coefficient =", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientNotEqualTo(Float value) {
            addCriterion("coefficient <>", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientGreaterThan(Float value) {
            addCriterion("coefficient >", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientGreaterThanOrEqualTo(Float value) {
            addCriterion("coefficient >=", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientLessThan(Float value) {
            addCriterion("coefficient <", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientLessThanOrEqualTo(Float value) {
            addCriterion("coefficient <=", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientIn(List<Float> values) {
            addCriterion("coefficient in", values, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientNotIn(List<Float> values) {
            addCriterion("coefficient not in", values, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientBetween(Float value1, Float value2) {
            addCriterion("coefficient between", value1, value2, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientNotBetween(Float value1, Float value2) {
            addCriterion("coefficient not between", value1, value2, "coefficient");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentIsNull() {
            addCriterion("number_of_student is null");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentIsNotNull() {
            addCriterion("number_of_student is not null");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentEqualTo(Integer value) {
            addCriterion("number_of_student =", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentNotEqualTo(Integer value) {
            addCriterion("number_of_student <>", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentGreaterThan(Integer value) {
            addCriterion("number_of_student >", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentGreaterThanOrEqualTo(Integer value) {
            addCriterion("number_of_student >=", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentLessThan(Integer value) {
            addCriterion("number_of_student <", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentLessThanOrEqualTo(Integer value) {
            addCriterion("number_of_student <=", value, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentIn(List<Integer> values) {
            addCriterion("number_of_student in", values, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentNotIn(List<Integer> values) {
            addCriterion("number_of_student not in", values, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentBetween(Integer value1, Integer value2) {
            addCriterion("number_of_student between", value1, value2, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andNumberOfStudentNotBetween(Integer value1, Integer value2) {
            addCriterion("number_of_student not between", value1, value2, "numberOfStudent");
            return (Criteria) this;
        }

        public Criteria andPromptIsNull() {
            addCriterion("prompt is null");
            return (Criteria) this;
        }

        public Criteria andPromptIsNotNull() {
            addCriterion("prompt is not null");
            return (Criteria) this;
        }

        public Criteria andPromptEqualTo(String value) {
            addCriterion("prompt =", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptNotEqualTo(String value) {
            addCriterion("prompt <>", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptGreaterThan(String value) {
            addCriterion("prompt >", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptGreaterThanOrEqualTo(String value) {
            addCriterion("prompt >=", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptLessThan(String value) {
            addCriterion("prompt <", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptLessThanOrEqualTo(String value) {
            addCriterion("prompt <=", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptLike(String value) {
            addCriterion("prompt like", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptNotLike(String value) {
            addCriterion("prompt not like", value, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptIn(List<String> values) {
            addCriterion("prompt in", values, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptNotIn(List<String> values) {
            addCriterion("prompt not in", values, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptBetween(String value1, String value2) {
            addCriterion("prompt between", value1, value2, "prompt");
            return (Criteria) this;
        }

        public Criteria andPromptNotBetween(String value1, String value2) {
            addCriterion("prompt not between", value1, value2, "prompt");
            return (Criteria) this;
        }

        public Criteria andUpdateatIsNull() {
            addCriterion("updateat is null");
            return (Criteria) this;
        }

        public Criteria andUpdateatIsNotNull() {
            addCriterion("updateat is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateatEqualTo(Date value) {
            addCriterion("updateat =", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatNotEqualTo(Date value) {
            addCriterion("updateat <>", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatGreaterThan(Date value) {
            addCriterion("updateat >", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatGreaterThanOrEqualTo(Date value) {
            addCriterion("updateat >=", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatLessThan(Date value) {
            addCriterion("updateat <", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatLessThanOrEqualTo(Date value) {
            addCriterion("updateat <=", value, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatIn(List<Date> values) {
            addCriterion("updateat in", values, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatNotIn(List<Date> values) {
            addCriterion("updateat not in", values, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatBetween(Date value1, Date value2) {
            addCriterion("updateat between", value1, value2, "updateat");
            return (Criteria) this;
        }

        public Criteria andUpdateatNotBetween(Date value1, Date value2) {
            addCriterion("updateat not between", value1, value2, "updateat");
            return (Criteria) this;
        }

        public Criteria andCreateatIsNull() {
            addCriterion("createat is null");
            return (Criteria) this;
        }

        public Criteria andCreateatIsNotNull() {
            addCriterion("createat is not null");
            return (Criteria) this;
        }

        public Criteria andCreateatEqualTo(Date value) {
            addCriterion("createat =", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatNotEqualTo(Date value) {
            addCriterion("createat <>", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatGreaterThan(Date value) {
            addCriterion("createat >", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatGreaterThanOrEqualTo(Date value) {
            addCriterion("createat >=", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatLessThan(Date value) {
            addCriterion("createat <", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatLessThanOrEqualTo(Date value) {
            addCriterion("createat <=", value, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatIn(List<Date> values) {
            addCriterion("createat in", values, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatNotIn(List<Date> values) {
            addCriterion("createat not in", values, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatBetween(Date value1, Date value2) {
            addCriterion("createat between", value1, value2, "createat");
            return (Criteria) this;
        }

        public Criteria andCreateatNotBetween(Date value1, Date value2) {
            addCriterion("createat not between", value1, value2, "createat");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table occupation
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 20 02:59:46 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table occupation
     *
     * @mbg.generated Mon Jul 20 02:59:46 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}